<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>self-tutorial on lunarwhite</title><link>https://lunarwhite.github.io/tags/self-tutorial/</link><description>Recent content in self-tutorial on lunarwhite</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© lunarwhite</copyright><lastBuildDate>Wed, 30 Jun 2021 10:38:49 +0000</lastBuildDate><atom:link href="https://lunarwhite.github.io/tags/self-tutorial/index.xml" rel="self" type="application/rss+xml"/><item><title>HPC - MIC</title><link>https://lunarwhite.github.io/posts/guides/hpc-mic/</link><pubDate>Wed, 30 Jun 2021 10:38:49 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/hpc-mic/</guid><description>1 初识与MIC 1.0 MIC应用模式 CPU原生模式 offload：CPU为主MIC为辅模式（最常用） CPU与MIC对等模式 MIC为主CPU为辅模式 native：MIC原生模式 1.1 offload, pi #include&amp;lt;stdio.h&amp;gt;#include&amp;lt;stdlib.h&amp;gt;#include&amp;lt;math.h&amp;gt; int main(){ float pi=0.0f; int count=10000; int i; #pragma offload target (mic) #pragma omp parallel for reduction(+:pi) for(i=0;i&amp;lt;count;i++){ float t=(float)((i+0.</description></item><item><title>Deeplearning introduction - Ⅱ</title><link>https://lunarwhite.github.io/posts/guides/dl-intro2/</link><pubDate>Thu, 24 Jun 2021 20:21:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/dl-intro2/</guid><description>1 目标检测 1.1 简介 目标定位 目标检测 1.2 过程 全连接层转化成卷积层 卷积运算 用卷积实现滑动窗口检测 思路：首选确定一个矩形窗口——&amp;gt;然后将这个窗口按照一定的stride,遍历裁剪图片——&amp;gt;分别对每一张裁剪得到的图片，做图片分类 优点：共享权重参数，操作一次就可以完成，提高了整个算法的效率 缺点：边界框的位置可能不够准确 定义Label $[Pc,Bx,By,Bw,Bh,&amp;hellip;.</description></item><item><title>Deeplearning introduction - Ⅰ</title><link>https://lunarwhite.github.io/posts/guides/dl-intro1/</link><pubDate>Thu, 24 Jun 2021 20:20:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/dl-intro1/</guid><description>1 简介 1.1 一种定义 P（Performance）来评估计算机程序在某类任务T（Task）上的性能，若一个程序通过利用经验E（Experience）在T中任务上获得了性能改善，则我们就说关于T和P，该程序对E进行了学习 1.2 一种划分 分类Classification 输出值离散 e.g. 根据光谱的形状，分类为恒星、星系或者其它 回归Regression 输出连续值 e.</description></item><item><title>HPC - CUDA</title><link>https://lunarwhite.github.io/posts/guides/hpc-cuda/</link><pubDate>Sun, 02 May 2021 11:38:49 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/hpc-cuda/</guid><description>1 初识与CUDA 1.0 基础概念 主机端-设备端（Host-Device） 内核函数（Kernel Function） 线程模型（Thread Model） 存储模型（Memory Model） 执行模型（CUDA Execution Model） GPU连接节点 ssh gpu01</description></item><item><title>HPC - OpenMP</title><link>https://lunarwhite.github.io/posts/guides/hpc-openmp/</link><pubDate>Fri, 30 Apr 2021 19:18:01 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/hpc-openmp/</guid><description>1 初识与OpenMP 1.1 OpenMP基本结构 #include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;omp.h&amp;gt;#include &amp;lt;stdio.h&amp;gt;#define NUM_THREADS 8 //设置线程数目为8 int main(){ //--串行区，由一个初始线程执行 static long num_steps=1000000000; double step; int i; double x,pi,sum=0.</description></item><item><title>Deeplearning frameworks</title><link>https://lunarwhite.github.io/posts/guides/dl-frameworks/</link><pubDate>Sat, 24 Apr 2021 20:20:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/dl-frameworks/</guid><description>1 SkLearn 1.1 参考 https://sklearn.apachecn.org/ https://scikit-learn.org/stable/user_guide.html 2 Keras 2.1 参考 https://keras.io/zh/ 2.2 损失函数 二分类 binary_crossentropy 多分类 categorical_crossentropy one-hot编码 sparse_categorical_crossentropy 数字编码 kullback_leibler_divergence hinge 多用于SVM categorical_hinge squared_hinge poisson 回归 mean_squared_error mean_absolute_error mean_absolute_percentage_error mean_squared_logarithmic_error logcosh cosine_proximity 2.</description></item><item><title>HPC - MPI</title><link>https://lunarwhite.github.io/posts/guides/hpc-mpi/</link><pubDate>Fri, 02 Apr 2021 18:18:49 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/hpc-mpi/</guid><description>1 初识与MPI 1.1 hello-world #include&amp;#34;mpi.h&amp;#34;#include&amp;lt;stdio.h&amp;gt;#include&amp;lt;math.h&amp;gt;void main(int argc, char *argv[]){ // 相关变量声明 int numprocs; int procnum; int namelen; char pro_name[MPI_MAX_PROCESSOR_NAME]; // 初始化MPI环境 MPI_Init(&amp;amp;argc, &amp;amp;argv); // MPI程序体 MPI_Comm_rank(MPI_COMM_WORLD, &amp;amp;procnum); MPI_Comm_size(MPI_COMM_WORLD, &amp;amp;numprocs); MPI_Get_processor_name(pro_name, &amp;amp;namelen); printf(&amp;#34;Hello World!</description></item><item><title>MySQL</title><link>https://lunarwhite.github.io/posts/guides/mysql/</link><pubDate>Thu, 05 Nov 2020 17:08:43 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/mysql/</guid><description>1 常用命令 #start net start mysql #stop net stop mysql 2 测试脚本 新建 studentdb.sql 如下 /* Source Host : localhost:3306 Source Database : studentdb Target Server Type : MYSQL Target Server Version : 50642 File Encoding : 65001 */SETFOREIGN_KEY_CHECKS=0;-- ---------------------------- -- Table structure for `stuscore` -- ---------------------------- DROPTABLEIFEXISTS`stuscore`;CREATETABLE`stuscore`(`id`varchar(6)NOTNULL,`name`varchar(8)DEFAULTNULL,`gender`varchar(2)DEFAULTNULL,`score`int(3)DEFAULTNULL,PRIMARYKEY(`id`))ENGINE=InnoDBDEFAULTCHARSET=utf8;-- ---------------------------- -- Records of stuscore -- ---------------------------- INSERTINTO`stuscore`VALUES(&amp;#39;600001&amp;#39;,&amp;#39;宋皓宇&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;71&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;620395&amp;#39;,&amp;#39;张一弛&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;88&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800001&amp;#39;,&amp;#39;贺楠苏&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;86&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800002&amp;#39;,&amp;#39;张梓煜&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;83&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800003&amp;#39;,&amp;#39;徐坤&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;76&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800004&amp;#39;,&amp;#39;王茂赟&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;65&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800005&amp;#39;,&amp;#39;卢爽&amp;#39;,&amp;#39;女&amp;#39;,&amp;#39;67&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800007&amp;#39;,&amp;#39;李长烨&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;55&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800008&amp;#39;,&amp;#39;马馨竹&amp;#39;,&amp;#39;女&amp;#39;,&amp;#39;98&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800009&amp;#39;,&amp;#39;王梓铭&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;92&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800010&amp;#39;,&amp;#39;孙健恺&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;100&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800011&amp;#39;,&amp;#39;赵雨萱&amp;#39;,&amp;#39;女&amp;#39;,&amp;#39;33&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800012&amp;#39;,&amp;#39;李明睿&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;56&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800013&amp;#39;,&amp;#39;程云杨&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;79&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800014&amp;#39;,&amp;#39;李可欣&amp;#39;,&amp;#39;女&amp;#39;,&amp;#39;83&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800015&amp;#39;,&amp;#39;李闻天&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;78&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800016&amp;#39;,&amp;#39;何朝旭&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;88&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800017&amp;#39;,&amp;#39;杨章驰&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;89&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800018&amp;#39;,&amp;#39;张浩阳&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;83&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800019&amp;#39;,&amp;#39;尹丹彤&amp;#39;,&amp;#39;女&amp;#39;,&amp;#39;76&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800020&amp;#39;,&amp;#39;孟鸽&amp;#39;,&amp;#39;女&amp;#39;,&amp;#39;91&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800021&amp;#39;,&amp;#39;吴昌鸿&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;82&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800022&amp;#39;,&amp;#39;耿嘉辉&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;70&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800023&amp;#39;,&amp;#39;梁鹤飞&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;64&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800024&amp;#39;,&amp;#39;李腾飞&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;55&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800025&amp;#39;,&amp;#39;张岩&amp;#39;,&amp;#39;女&amp;#39;,&amp;#39;61&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800026&amp;#39;,&amp;#39;曾永泽&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;78&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800027&amp;#39;,&amp;#39;何毅辉&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;70&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800028&amp;#39;,&amp;#39;庄伯语&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;59&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800029&amp;#39;,&amp;#39;许艺帆&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;80&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800030&amp;#39;,&amp;#39;赫明佳&amp;#39;,&amp;#39;女&amp;#39;,&amp;#39;47&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800031&amp;#39;,&amp;#39;申亦轩&amp;#39;,&amp;#39;女&amp;#39;,&amp;#39;56&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;800610&amp;#39;,&amp;#39;袁立钊&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;79&amp;#39;);INSERTINTO`stuscore`VALUES(&amp;#39;810235&amp;#39;,&amp;#39;刘晓奇&amp;#39;,&amp;#39;男&amp;#39;,&amp;#39;78&amp;#39;);</description></item><item><title>SQL</title><link>https://lunarwhite.github.io/posts/guides/sql/</link><pubDate>Fri, 30 Oct 2020 20:21:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/sql/</guid><description>1 建表添加约束 not null primary key foreign key auto_increment default (e.g. getdate()) check (e.g. value)</description></item><item><title>Java</title><link>https://lunarwhite.github.io/posts/guides/java/</link><pubDate>Wed, 30 Sep 2020 20:21:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/java/</guid><description>1 命名规范 package/project: hellojava class: MyPeople variable value/method: myAge, getGender() constant value: TEMP_PI</description></item><item><title>C++</title><link>https://lunarwhite.github.io/posts/guides/cpp/</link><pubDate>Sat, 06 Jun 2020 20:21:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/cpp/</guid><description>1 基础语法 1.1 输入输出 ⽤cin读⼊字符串的时候，是以空格为分隔符的，如果想要读⼊⼀整⾏的字符串，就需要⽤getline string s; getline(cin,s); //读取⼀⾏的字符串，包括空格 cout&amp;lt;&amp;lt;s.length(); //输出字符串s的⻓度 换行\n和endl有区别，后者输出一个换行符，并立即刷新缓冲区，使得栈中的东西刷新一次。过多的 endl 是影响程序执行效率低下的因素之一。 &amp;quot; &amp;quot; &amp;lt; &amp;gt;头文件也有区别，前者优先在本地目录下找，找不到再去系统目录。 cout多行时，正确姿势： cout&amp;lt;&amp;lt;&amp;#34;Forst line there.</description></item><item><title>Python</title><link>https://lunarwhite.github.io/posts/guides/python/</link><pubDate>Thu, 30 Apr 2020 20:21:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/python/</guid><description>1 算数运算 乘法：3**2 Log(A) 其中A为0的情况会报警告。 定义一个epsilon=1e-8，np.log(A + epsilon) 2 数据类型 2.1 基本 type函数：type(12.3) 2.</description></item><item><title>Conda</title><link>https://lunarwhite.github.io/posts/guides/conda/</link><pubDate>Sun, 12 Apr 2020 17:07:05 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/conda/</guid><description>1 基本环境 1.1 检查pip python -m ensurepip python -m pip install --upgrade pip 1.2 换镜像源 conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free conda config --add channels https://mirrors.</description></item><item><title>Git</title><link>https://lunarwhite.github.io/posts/guides/git/</link><pubDate>Thu, 12 Mar 2020 20:20:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/git/</guid><description>1 参考 2 常用 # 撤销 git reset --soft HEAD^</description></item></channel></rss>