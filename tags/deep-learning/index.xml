<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>deep-learning on lunarwhite</title><link>https://lunarwhite.github.io/tags/deep-learning/</link><description>Recent content in deep-learning on lunarwhite</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© lunarwhite</copyright><lastBuildDate>Thu, 24 Jun 2021 20:21:48 +0000</lastBuildDate><atom:link href="https://lunarwhite.github.io/tags/deep-learning/index.xml" rel="self" type="application/rss+xml"/><item><title>Deeplearning introduction - Ⅱ</title><link>https://lunarwhite.github.io/posts/guides/dl-intro2/</link><pubDate>Thu, 24 Jun 2021 20:21:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/dl-intro2/</guid><description>1 目标检测 1.1 简介 目标定位 目标检测 1.2 过程 全连接层转化成卷积层 卷积运算 用卷积实现滑动窗口检测 思路：首选确定一个矩形窗口——&amp;gt;然后将这个窗口按照一定的stride,遍历裁剪图片——&amp;gt;分别对每一张裁剪得到的图片，做图片分类 优点：共享权重参数，操作一次就可以完成，提高了整个算法的效率 缺点：边界框的位置可能不够准确 定义Label $[Pc,Bx,By,Bw,Bh,&amp;hellip;.</description></item><item><title>Deeplearning introduction - Ⅰ</title><link>https://lunarwhite.github.io/posts/guides/dl-intro1/</link><pubDate>Thu, 24 Jun 2021 20:20:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/dl-intro1/</guid><description>1 简介 1.1 一种定义 P（Performance）来评估计算机程序在某类任务T（Task）上的性能，若一个程序通过利用经验E（Experience）在T中任务上获得了性能改善，则我们就说关于T和P，该程序对E进行了学习 1.2 一种划分 分类Classification 输出值离散 e.g. 根据光谱的形状，分类为恒星、星系或者其它 回归Regression 输出连续值 e.</description></item><item><title>Classify food images using CNN with Keras</title><link>https://lunarwhite.github.io/posts/assigns/dl-food-classify/</link><pubDate>Thu, 03 Jun 2021 11:38:49 +0000</pubDate><guid>https://lunarwhite.github.io/posts/assigns/dl-food-classify/</guid><description># to be continue: # 1. resize smaller # 2. 归一化 # 3. 期望acc 40-70% import os import cv2 import matplotlib.</description></item><item><title>Deeplearning frameworks</title><link>https://lunarwhite.github.io/posts/guides/dl-frameworks/</link><pubDate>Sat, 24 Apr 2021 20:20:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/guides/dl-frameworks/</guid><description>1 SkLearn 1.1 参考 https://sklearn.apachecn.org/ https://scikit-learn.org/stable/user_guide.html 2 Keras 2.1 参考 https://keras.io/zh/ 2.2 损失函数 二分类 binary_crossentropy 多分类 categorical_crossentropy one-hot编码 sparse_categorical_crossentropy 数字编码 kullback_leibler_divergence hinge 多用于SVM categorical_hinge squared_hinge poisson 回归 mean_squared_error mean_absolute_error mean_absolute_percentage_error mean_squared_logarithmic_error logcosh cosine_proximity 2.</description></item><item><title>Logistic regression and validity analysis</title><link>https://lunarwhite.github.io/posts/assigns/dl-lr-va/</link><pubDate>Sat, 24 Apr 2021 11:38:49 +0000</pubDate><guid>https://lunarwhite.github.io/posts/assigns/dl-lr-va/</guid><description># 请用逻辑回归预测xtest对应的y值（梯度下降自己实现）。 # 并计算输出 accuracy，precision，recall，auc import numpy as np import matplotlib.pyplot as plt from sklearn.metrics import * xtrain = np.array([8., 3.</description></item><item><title>Figure out the best aurgments using gradient descent - Ⅱ</title><link>https://lunarwhite.github.io/posts/assigns/dl-gd2/</link><pubDate>Sat, 17 Apr 2021 11:38:49 +0000</pubDate><guid>https://lunarwhite.github.io/posts/assigns/dl-gd2/</guid><description># 采用模型y=b+wx，试着用梯度下降算法求出最优参数 # 1.1 画出xdata，ydata的散点图 # 1.2 画出线性回归的函数图 # 2.1 画出b，w变化的图 # 1.在作业三基础上实现Adagrad # 2.在作业三基础上，画出损失函数随迭代次数的变化的图 import numpy as np import matplotlib.</description></item><item><title>Figure out the best aurgments using gradient descent - Ⅰ</title><link>https://lunarwhite.github.io/posts/assigns/dl-gd1/</link><pubDate>Sun, 11 Apr 2021 11:38:49 +0000</pubDate><guid>https://lunarwhite.github.io/posts/assigns/dl-gd1/</guid><description># 采用模型y=b+wx，试着用梯度下降算法求出最优参数 # 1.1 画出xdata，ydata的散点图 # 1.2 画出线性回归的函数图 # 2.1 画出b，w变化的图 import numpy as np import matplotlib.pyplot as plt # 给定 xdata, ydata, 都为 10 维长的数组 xdata = np.</description></item><item><title>Fit cicada frequency and temperature using linear regression</title><link>https://lunarwhite.github.io/posts/assigns/dl-lr-cicada/</link><pubDate>Sat, 03 Apr 2021 11:38:49 +0000</pubDate><guid>https://lunarwhite.github.io/posts/assigns/dl-lr-cicada/</guid><description>import numpy as np import matplotlib.pyplot as plt from sklearn import linear_model from sklearn.metrics import mean_squared_error # dataset xtrain = [8.</description></item></channel></rss>