<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sdu-server on lunarwhite</title><link>https://lunarwhite.github.io/tags/sdu-server/</link><description>Recent content in sdu-server on lunarwhite</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© lunarwhite</copyright><lastBuildDate>Sat, 24 Apr 2021 20:20:48 +0000</lastBuildDate><atom:link href="https://lunarwhite.github.io/tags/sdu-server/index.xml" rel="self" type="application/rss+xml"/><item><title> Available GPU server in SDU</title><link>https://lunarwhite.github.io/posts/devtools/sdu-gpu/</link><pubDate>Sat, 24 Apr 2021 20:20:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/sdu-gpu/</guid><description>1 配置 1.1 注意 释放显存：手动重启jupyter/重启kernel 工作目录：/home/ubuntu/work 1.2 环境 操作系统：Ubuntu 框架：pytorch-gpu/tensorflow-gpu，连接直接使用 1.3 连接-Jupyter 默认：12345678 1.4 连接-SSH ssh ubuntu@&amp;lt;address&amp;gt; -p &amp;lt;port&amp;gt; 端口：IP地址冒号后-10000 用户名：ubuntu 默认：123456 1.5 长期运行 Terminal：会持续显示输出信息，网页重开还可以持续显示输出 # 把jupyter文件copy成一个.py文件 jupyter nbconvert --to script *.ipynb # 执行文件 python *.py Notebook：网页关闭下次再打开就不再显示输出，程序还在运行但无法查看程序运行进展，而且只有重启kernel才能释放显存。 1.6 软件升级 系统 sudo apt-get update -y sudo apt-get upgrade -y 安装git sudo apt install git 1.7 空间清理 命令清理 # 定期观察磁盘占用情况 df -h # 清空回收站 sudo rm -rf ~/.</description></item><item><title> Available HPC server in SDU</title><link>https://lunarwhite.github.io/posts/devtools/sdu-hpc/</link><pubDate>Wed, 21 Apr 2021 20:20:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/sdu-hpc/</guid><description>1 配置 1.1 连接 ssh stu14@219.231.162.66 默认：a123456 1.2 系统信息 1个登录节点ln01 1个管理节点mu01 34个CPU节点cu01-cu34，队列名cu 2个GPU节点gpu01、gpu02，队列名gpu 2个mic节点mic01、mic02，队列名mic 1.3 环境变量 编辑配置文件 vi ~/.bashrc 写入环境变量 source /opt/intel/composer_xe_2015.1.133/bin/compilervars.sh intel64 source /opt/intel/impi/5.0.2.044/bin64/mpivars.sh source /opt/intel/mkl/bin/intel64/mklvars_intel64.sh 保存文件 :wq 后，使修改生效 source ~/.bashrc 同一账号修改一次即可，但最后一步生效命令都需要做 修改后，使用 which mpicc 命令检查是否完成环境变量配置 可以找到编译器路径，表明配置成功</description></item></channel></rss>