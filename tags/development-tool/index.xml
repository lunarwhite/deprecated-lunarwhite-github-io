<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>development-tool on lunarwhite</title><link>https://lunarwhite.github.io/tags/development-tool/</link><description>Recent content in development-tool on lunarwhite</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© lunarwhite</copyright><lastBuildDate>Sat, 24 Apr 2021 20:20:48 +0000</lastBuildDate><atom:link href="https://lunarwhite.github.io/tags/development-tool/index.xml" rel="self" type="application/rss+xml"/><item><title> Available GPU server in SDU</title><link>https://lunarwhite.github.io/posts/devtools/sdu-gpu/</link><pubDate>Sat, 24 Apr 2021 20:20:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/sdu-gpu/</guid><description>1 配置 1.1 注意 释放显存：手动重启jupyter/重启kernel 工作目录：/home/ubuntu/work 1.2 环境 操作系统：Ubuntu 框架：pytorch-gpu/tensorflow-gpu，连接直接使用 1.3 连接-Jupyter 默认：12345678 1.4 连接-SSH ssh ubuntu@&amp;lt;address&amp;gt; -p &amp;lt;port&amp;gt; 端口：IP地址冒号后-10000 用户名：ubuntu 默认：123456 1.5 长期运行 Terminal：会持续显示输出信息，网页重开还可以持续显示输出 # 把jupyter文件copy成一个.py文件 jupyter nbconvert --to script *.ipynb # 执行文件 python *.py Notebook：网页关闭下次再打开就不再显示输出，程序还在运行但无法查看程序运行进展，而且只有重启kernel才能释放显存。 1.6 软件升级 系统 sudo apt-get update -y sudo apt-get upgrade -y 安装git sudo apt install git 1.7 空间清理 命令清理 # 定期观察磁盘占用情况 df -h # 清空回收站 sudo rm -rf ~/.</description></item><item><title> Available HPC server in SDU</title><link>https://lunarwhite.github.io/posts/devtools/sdu-hpc/</link><pubDate>Wed, 21 Apr 2021 20:20:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/sdu-hpc/</guid><description>1 配置 1.1 连接 ssh stu14@219.231.162.66 默认：a123456 1.2 系统信息 1个登录节点ln01 1个管理节点mu01 34个CPU节点cu01-cu34，队列名cu 2个GPU节点gpu01、gpu02，队列名gpu 2个mic节点mic01、mic02，队列名mic 1.3 环境变量 编辑配置文件 vi ~/.bashrc 写入环境变量 source /opt/intel/composer_xe_2015.1.133/bin/compilervars.sh intel64 source /opt/intel/impi/5.0.2.044/bin64/mpivars.sh source /opt/intel/mkl/bin/intel64/mklvars_intel64.sh 保存文件 :wq 后，使修改生效 source ~/.bashrc 同一账号修改一次即可，但最后一步生效命令都需要做 修改后，使用 which mpicc 命令检查是否完成环境变量配置 可以找到编译器路径，表明配置成功</description></item><item><title>Chrome and Edge</title><link>https://lunarwhite.github.io/posts/devtools/chrome-edge/</link><pubDate>Sat, 20 Feb 2021 12:55:08 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/chrome-edge/</guid><description>1 快捷键 1.1 Edge 参考链接-support.microsoft.
1 Ctrl + D 将当前选项卡另存为收藏夹 Ctrl + Shift + D 在新文件夹中将所有打开的标签页另存为收藏夹 Ctrl + H 在新标签页中打开“历史记录”(Web UI) Ctrl + J 在新标签页中打开“下载”(Web UI) Ctrl + Shift + Y 打开集合 Ctrl + M 将当前标签页设为静音（切换） 2 Alt + 向左键 返回 Alt + 向右键 前进 Ctrl + Tab 切换到下一个标签页 Ctrl + Shift + Tab 切换到上一个标签页 Ctrl + 1~8 切换到特定标签页 Ctrl + 9 切换到最后一个标签页 Ctrl + N 打开新窗口 Ctrl + Shift + N 打开新的 InPrivate 窗口 Ctrl + T 打开新标签页并切换到该标签页 Ctrl + Shift + T 重新打开上一个关闭的标签页并切换到该标签页 Ctrl + R 重新加载当前页 Ctrl + Shift + R 重新加载当前页，忽略缓存内容 Ctrl + W 关闭当前标签页 Ctrl + Shift + W 关闭当前窗口 3 空格键 向下滚动网页，一次滚动一个屏幕 Shift + 空格键 向上滚动网页，一次滚动一个屏幕 PgDn 向下滚动网页，一次滚动一个屏幕 PgUp 向上滚动网页，一次滚动一个屏幕 Home 键 转到页面顶部，将键盘焦点移动到窗格的第一项 End 转到页面底部，将键盘焦点移动到窗格的最后一项 Ctrl + 0 重置缩放级别 4 Ctrl + Enter 将 www.</description></item><item><title>First try in SwitchyOmega and shadowsocks</title><link>https://lunarwhite.github.io/posts/devtools/so-ss/</link><pubDate>Thu, 20 Aug 2020 08:06:12 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/so-ss/</guid><description>GFW 确实影响了日常，记录踩坑以备不时之需
1 SS 账号 youneed.win free-ss Share-SSR-V2ray 2 SO 配置 chrome-setup-guide</description></item><item><title>DNS cache poisoning problem in GitHub.com</title><link>https://lunarwhite.github.io/posts/devtools/dns-github/</link><pubDate>Mon, 13 Jul 2020 21:20:01 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/dns-github/</guid><description>0 update 目前来看，用SwitchHosts统一管理或许是更佳选择 1 查询ip 查询地址： ipaddress 需要查询： http://github.com/ http://assets-cdn.github.com/ http://github.global.ssl.fastly.net/ 2 修改host 输入命令： sudo notepad C:\Windows\System32\drivers\etc\hosts 形式如下： 140.82.114.3 github.com 185.199.108.153 assets-cdn.github.com 185.199.109.153 assets-cdn.github.com 185.199.110.153 assets-cdn.github.com 185.199.111.153 assets-cdn.github.com 199.232.69.194 github.global.ssl.fastly.net 3 刷新缓存 输入命令： ipconfig /flushdns 4 其他方法 DNSCrypt</description></item><item><title>MobaXterm</title><link>https://lunarwhite.github.io/posts/devtools/mobaxterm/</link><pubDate>Wed, 13 May 2020 22:53:58 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/mobaxterm/</guid><description>1 设置 1.1 具体选项 选中复制，右键粘贴：Settings &amp;ndash;&amp;gt; Configuration &amp;ndash;&amp;gt; Terminal , 然后打勾选中 字体、背景 设置：Settings &amp;ndash;&amp;gt; Configuration &amp;ndash;&amp;gt; Terminal 取消自动连接SFTP：settings &amp;ndash;&amp;gt; Configuration，在弹出的对话框中选择 SSH，再将automaticall switch to SSH-browser tab after login前面的对勾去掉</description></item><item><title>Windows terminal</title><link>https://lunarwhite.github.io/posts/devtools/win-terminal/</link><pubDate>Wed, 13 May 2020 22:53:58 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/win-terminal/</guid><description>千呼万唤始出来，微软自家也有能称得上是terminal的terminal了
1 参考 官方文档 2 注意 确保添加bash到path 获取 guid 获取 icon(256*256) Powershell：background1 background2 Windows：background1 background2 Git-Bash：background1 background2 icon1 Ubuntu：background1 icon1 Linux：background1 background2 background3 3 添加到右键菜单 Windows Registry Editor Version 5.00 [HKEY_CLASSES_ROOT\Directory\Background\shell\wt] @=&amp;#34;Terminal Here&amp;#34; &amp;#34;Icon&amp;#34;=&amp;#34;C:\\Users\\mewin\\scoop\\apps\\windows-terminal\\current\\wt.exe&amp;#34; [HKEY_CLASSES_ROOT\Directory\Background\shell\wt\command] @=&amp;#34;C:\\Users\\mewin\\scoop\\apps\\windows-terminal\\current\\wt.exe&amp;#34; 4 配置 { &amp;#34;$schema&amp;#34;: &amp;#34;https://aka.ms/terminal-profiles-schema&amp;#34;, // Add custom actions and keybindings to this array. // To unbind a key combination from your defaults.json, set the command to &amp;#34;unbound&amp;#34;.</description></item><item><title>Eclipse IED settings for Java</title><link>https://lunarwhite.github.io/posts/devtools/eclipse-java/</link><pubDate>Sun, 10 May 2020 17:13:00 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/eclipse-java/</guid><description>1 全局配置 代码自动补全 Window -&amp;gt; Perferences -&amp;gt; Java -&amp;gt; Editor -&amp;gt; Content Assist 在Auto Activation 段中设置 Auto activation triggers for Java .abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ editor字体变大；console字体变小 General-&amp;gt;workspace-&amp;gt;更改GBK-&amp;gt;UTF-8 2 shortcuts 1.auto getter &amp;amp; setter Alt+Shift+S -&amp;gt; R -&amp;gt; Alt+A 2.run &amp;amp; debug Run CTRL+F11 Debug F11</description></item><item><title>VSCode</title><link>https://lunarwhite.github.io/posts/devtools/vscode/</link><pubDate>Thu, 02 Jan 2020 17:04:16 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/vscode/</guid><description>拥抱开源，visual studio code简直就是开发利器、宇宙第一editor，尤其是众多开源的extension，让vscode始终充满活力。本文记录了不同语言下vscode的基本配置和全局快捷键，希望能最大效度利用好此工具，happy hacking，happy coding
1 全局配置 登录账号同步 删除自带theme 2 添加到右键菜单 Windows Registry Editor Version 5.00 [HKEY_CURRENT_USER\Software\Classes\*\shell\Open with &amp;amp;Code] @=&amp;#34;Open with Code&amp;#34; &amp;#34;Icon&amp;#34;=&amp;#34;C:\\Users\\mewin\\scoop\\apps\\vscode\\current\\Code.exe&amp;#34; [HKEY_CURRENT_USER\Software\Classes\*\shell\Open with Code\command] @=&amp;#34;\&amp;#34;C:\\Users\\mewin\\scoop\\apps\\vscode\\current\\Code.exe\&amp;#34; \&amp;#34;%1\&amp;#34;&amp;#34; [HKEY_CURRENT_USER\Software\Classes\Directory\shell\Open with Code] @=&amp;#34;Open with Code&amp;#34; &amp;#34;Icon&amp;#34;=&amp;#34;C:\\Users\\mewin\\scoop\\apps\\vscode\\current\\Code.exe&amp;#34; [HKEY_CURRENT_USER\Software\Classes\Directory\shell\Open with Code\command] @=&amp;#34;\&amp;#34;C:\\Users\\mewin\\scoop\\apps\\vscode\\current\\Code.exe\&amp;#34; \&amp;#34;%1\&amp;#34;&amp;#34; [HKEY_CURRENT_USER\Software\Classes\Directory\Background\shell\Open with Code] @=&amp;#34;Open with Code&amp;#34; &amp;#34;Icon&amp;#34;=&amp;#34;C:\\Users\\mewin\\scoop\\apps\\vscode\\current\\Code.exe&amp;#34; [HKEY_CURRENT_USER\Software\Classes\Directory\Background\shell\Open with Code\command] @=&amp;#34;\&amp;#34;C:\\Users\\mewin\\scoop\\apps\\vscode\\current\\Code.exe\&amp;#34; \&amp;#34;%V\&amp;#34;&amp;#34; 3 快捷键 重开一行：光标不在行尾，ctrl + enter 向下重开一行；ctrl+shift + enter 则是在上一行重开一行 删除一行：光标没有选择内容时，ctrl + x 剪切一行；ctrl +shift + k 直接删除一行 移动一行：alt + ↑ 向上移动一行；alt + ↓ 向下移动一行 复制一行：shift + alt + ↓ 向下复制一行；shift + alt + ↑ 向上复制一行 ctrl + f ：搜索 ctrl + alt + f： 替换 ctrl + shift + f：在项目内搜索 Ctrl+P 快速打开最近打开的文件 Ctrl+Shift+N 打开新的编辑器窗口 Ctrl+Shift+W 关闭编辑器 Ctrl + Home 跳转到页头 Ctrl + End 跳转到页尾 Ctrl + Shift + [ 折叠区域代码 Ctrl + Shift + ] 展开区域代码 Ctrl + / 添加关闭行注释 Shift + Alt +A 块区域注释</description></item><item><title>Install linux in vmware virtual machine</title><link>https://lunarwhite.github.io/posts/devtools/vm-linux/</link><pubDate>Fri, 29 Nov 2019 16:59:56 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/vm-linux/</guid><description>本文简单介绍了Linux基本的开发环境配置，基于VMware虚拟机，搭配Ubuntu LTS，借助ssh工具和host机联络，比较舒适
1 安装部署 创建 2G/16G/2 关闭3D/USB3.1/虚拟化/移除打印机 xx72/LA/vmlnx/xx 安装VMTool # extract here # open in terminal # root sudo su # install ./vmware-install.pl 设置 2 卸载预装 # 卸载 dpkg -l | grep gnome sudo apt-get remove --purge -y gnome-bluetooth sudo apt-get remove --purge -y gnome-calculator sudo apt-get remove --purge -y gnome-characters sudo apt-get remove --purge -y gnome-disk-utility sudo apt-get remove --purge -y gnome-font-viewer sudo apt-get remove --purge -y gnome-logs sudo apt-get remove --purge -y gnome-online-accounts sudo apt-get remove --purge -y gnome-power-manager sudo apt-get remove --purge -y gnome-screenshot sudo apt-get remove --purge -y gnome-system-monitor sudo apt-get remove --purge -y gnome-user-docs dpkg -l | grep firefox sudo apt-get remove --purge -y firefox sudo apt-get remove --purge -y firefox-locale-en 3 清理空间 # 删除系统不再使用的孤立软件 sudo apt-get autoremove --purge # 清理旧版本的软件缓存 sudo apt-get autoclean # 清理所有软件缓存 sudo apt-get clean # 清理缩略图缓存 rm -rf ~/.</description></item><item><title>scoop: command-line package manager for Windows</title><link>https://lunarwhite.github.io/posts/devtools/win-scoop/</link><pubDate>Wed, 20 Nov 2019 16:58:13 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/win-scoop/</guid><description>众所周知，Windows 下进行开发多少有点反人类，环境配置和 macos/linux 相比，简直就是灾难。索性有人开源了一系列包管理工具，scoop/chocolatey/winget，对比之下，选择了 scoop，体验良好，写一文向大家安利。
1 必要性 如果用过 macOS 或者 Linux 的朋友，或多或少都听说过包管理工具。通过包管理工具，你可以直接在终端中快速自动地安装、配置、卸载和升级软件，而无需通过 GUI 页面一步步手动安装下载软件。这非常适合一次性安装非常多软件，大大地节约了软件安装所需要的时间和步骤，同时也在一定程度上确保了来源软件的安全性
Windows下三大包管理工具，scoop/winget/chocolatey 降低安装维护软件的成本 避免安装大量软件造成的路径污染 不必查找和安装软件的其他依赖项 避免捆绑和垃圾软件 彻底地卸载 2 环境部署 set-executionpolicy remotesigned -scope currentuser iex (new-object net.webclient).downloadstring(&amp;#39;https://raw.githubusercontent.com/lukesampson/scoop/master/bin/install.ps1&amp;#39;) # basic scoop install 7zip scoop install git scoop install sudo scoop install innounp scoop install dark scoop checkup 3 软件安装 app query https://scoop-docs.now.sh/apps/ https://rasa.github.io/scoop-directory/by-apps app bucket # add third party bucket scoop bucket add &amp;lt;bucket&amp;gt; &amp;lt;bucket_url&amp;gt; # add official bucket scoop bucket add extras scoop bucket add versions scoop bucket add java normal # system scoop install geekuninstaller scoop install dismplusplus scoop install listary scoop install everything scoop install motrix scoop install kms # network &amp;amp; proxy scoop install switchhosts scoop install psiphon3 scoop install shadowsocks scoop install v2rayn # daily office scoop install chromium scoop install firefox scoop install wpsoffice scoop install rambox scoop install telegram scoop install slack scoop install steam # multimedia scoop install ditto # CTRL+shift+V scoop install lightshot # CTRL+shift+S scoop install imageglass scoop install mpv development # terminal emulator scoop install windows-terminal # admin scoop install mobaxterm # admin, icon scoop install hyper # admin # text editor / IDE scoop install typora # theme: github, night, monokai, misty, purple, fluent, drake scoop install vscode scoop install vscode-insider scoop install jetbrains-toolbox # image &amp;amp; text scoop install hugo-extended scoop install pandoc scoop install latex scoop install graphviz # database scoop install mysql scoop install sqlite scoop install postgresql scoop install mongodb scoop install redis scoop install kafka scoop install rabbitmq # web &amp;amp; other scoop install nodejs-lts scoop install nginx scoop install tomcat scoop install postman # golang scoop install go # python scoop install miniconda3 # c/cpp scoop install gcc scoop install gdb # java scoop install openjdk8-redhat scoop install maven 常用命令 # 查看已安装程序 scoop list # 查看已经添加的库 scoop bucket list # 查看其他库 scoop bucket known # 移除已经添加的库 scoop bucket rm nerd # 查找软件 scoop search &amp;lt;app&amp;gt; # 显示软件信息（含必要配置说明） scoop info &amp;lt;app&amp;gt; # 查看更新 scoop status # 自身诊断 scoop checkup # 更新scoop, 更新指定软件 scoop update * # 卸载程序并移除所有配置文件 scoop uninstall &amp;lt;app&amp;gt; -p # 删除所有缓存 scoop cache rm * scoop cleanup * # 卸载 Scoop scoop uninstall scoop</description></item><item><title>Personal static website hosts on Github Pages using Hugo</title><link>https://lunarwhite.github.io/posts/devtools/gp-site/</link><pubDate>Mon, 14 Oct 2019 19:40:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/gp-site/</guid><description>0 Quick start Quick Start - Hugo Host on GitHub - Hugo 1 Create hugo repository install hugo on Windows: scoop install hugo-extended create site directory: hugo new site personal-blog-v2 2 Add hugo theme choose from Hugo Theme Gallery clone theme repo, like cd personal-blog git clone https://github.com/athul/archie.git themes/archie remove .git dependence 3 Add contents content.md template --- title: &amp;#34;{{ replace .</description></item></channel></rss>