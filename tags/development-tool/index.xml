<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>development-tool on lunarwhite</title><link>https://lunarwhite.github.io/tags/development-tool/</link><description>Recent content in development-tool on lunarwhite</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© lunarwhite</copyright><lastBuildDate>Sat, 24 Apr 2021 20:20:48 +0000</lastBuildDate><atom:link href="https://lunarwhite.github.io/tags/development-tool/index.xml" rel="self" type="application/rss+xml"/><item><title> Available GPU server in SDU</title><link>https://lunarwhite.github.io/posts/devtools/sdu-gpu/</link><pubDate>Sat, 24 Apr 2021 20:20:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/sdu-gpu/</guid><description>1 配置 1.1 注意 释放显存：手动重启jupyter/重启kernel 工作目录：/home/ubuntu/work 1.2 环境 操作系统：Ubuntu 框架：pytorch-gpu/tensorflow-gpu，连接直接使用 1.3 连接-Jupyter 默认：12345678 1.4 连接-SSH ssh ubuntu@&amp;lt;address&amp;gt; -p &amp;lt;port&amp;gt; 端口：IP地址冒号后-10000 用户名：ubuntu 默认：123456 1.</description></item><item><title> Available HPC server in SDU</title><link>https://lunarwhite.github.io/posts/devtools/sdu-hpc/</link><pubDate>Wed, 21 Apr 2021 20:20:48 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/sdu-hpc/</guid><description>1 配置 1.1 连接 ssh stu14@219.231.162.66 默认：a123456 1.2 系统信息 1个登录节点ln01 1个管理节点mu01 34个CPU节点cu01-cu34，队列名cu 2个GPU节点gpu01、gpu02，队列名gpu 2个mic节点mic01、mic02，队列名mic 1.3 环境变量 编辑配置文件 vi ~/.</description></item><item><title>Chrome and Edge</title><link>https://lunarwhite.github.io/posts/devtools/chrome-edge/</link><pubDate>Sat, 20 Feb 2021 12:55:08 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/chrome-edge/</guid><description>1 快捷键 1.1 Edge 参考链接-support.microsoft.
1 Ctrl + D 将当前选项卡另存为收藏夹 Ctrl + Shift + D 在新文件夹中将所有打开的标签页另存为收藏夹 Ctrl + H 在新标签页中打开“历史记录”(Web UI) Ctrl + J 在新标签页中打开“下载”(Web UI) Ctrl + Shift + Y 打开集合 Ctrl + M 将当前标签页设为静音（切换） 2 Alt + 向左键 返回 Alt + 向右键 前进 Ctrl + Tab 切换到下一个标签页 Ctrl + Shift + Tab 切换到上一个标签页 Ctrl + 1~8 切换到特定标签页 Ctrl + 9 切换到最后一个标签页 Ctrl + N 打开新窗口 Ctrl + Shift + N 打开新的 InPrivate 窗口 Ctrl + T 打开新标签页并切换到该标签页 Ctrl + Shift + T 重新打开上一个关闭的标签页并切换到该标签页 Ctrl + R 重新加载当前页 Ctrl + Shift + R 重新加载当前页，忽略缓存内容 Ctrl + W 关闭当前标签页 Ctrl + Shift + W 关闭当前窗口 3 空格键 向下滚动网页，一次滚动一个屏幕 Shift + 空格键 向上滚动网页，一次滚动一个屏幕 PgDn 向下滚动网页，一次滚动一个屏幕 PgUp 向上滚动网页，一次滚动一个屏幕 Home 键 转到页面顶部，将键盘焦点移动到窗格的第一项 End 转到页面底部，将键盘焦点移动到窗格的最后一项 Ctrl + 0 重置缩放级别 4 Ctrl + Enter 将 www.</description></item><item><title>First try in SwitchyOmega and shadowsocks</title><link>https://lunarwhite.github.io/posts/devtools/so-ss/</link><pubDate>Thu, 20 Aug 2020 08:06:12 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/so-ss/</guid><description>GFW 确实影响了日常，记录踩坑以备不时之需
1 SS 账号 youneed.win free-ss Share-SSR-V2ray 2 SO 配置 chrome-setup-guide</description></item><item><title>DNS cache poisoning problem in GitHub.com</title><link>https://lunarwhite.github.io/posts/devtools/dns-github/</link><pubDate>Mon, 13 Jul 2020 21:20:01 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/dns-github/</guid><description>0 update 目前来看，用SwitchHosts统一管理或许是更佳选择 1 查询ip 查询地址： ipaddress 需要查询： http://github.com/ http://assets-cdn.github.com/ http://github.global.ssl.fastly.net/ 2 修改host 输入命令： sudo notepad C:\Windows\System32\drivers\etc\hosts 形式如下： 140.</description></item><item><title>MobaXterm</title><link>https://lunarwhite.github.io/posts/devtools/mobaxterm/</link><pubDate>Wed, 13 May 2020 22:53:58 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/mobaxterm/</guid><description>1 设置 1.1 具体选项 选中复制，右键粘贴：Settings &amp;ndash;&amp;gt; Configuration &amp;ndash;&amp;gt; Terminal , 然后打勾选中 字体、背景 设置：Settings &amp;ndash;&amp;gt; Configuration &amp;ndash;&amp;gt; Terminal 取消自动连接SFTP：settings &amp;ndash;&amp;gt; Configuration，在弹出的对话框中选择 SSH，再将automaticall switch to SSH-browser tab after login前面的对勾去掉</description></item><item><title>Windows terminal</title><link>https://lunarwhite.github.io/posts/devtools/win-terminal/</link><pubDate>Wed, 13 May 2020 22:53:58 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/win-terminal/</guid><description>千呼万唤始出来，微软自家也有能称得上是terminal的terminal了
1 参考 官方文档 2 注意 确保添加bash到path 获取 guid 获取 icon(256*256) Powershell：background1 background2 Windows：background1 background2 Git-Bash：background1 background2 icon1 Ubuntu：background1 icon1 Linux：background1 background2 background3 3 添加到右键菜单 Windows Registry Editor Version 5.</description></item><item><title>Eclipse IED settings for Java</title><link>https://lunarwhite.github.io/posts/devtools/eclipse-java/</link><pubDate>Sun, 10 May 2020 17:13:00 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/eclipse-java/</guid><description>1 全局配置 代码自动补全 Window -&amp;gt; Perferences -&amp;gt; Java -&amp;gt; Editor -&amp;gt; Content Assist 在Auto Activation 段中设置 Auto activation triggers for Java .</description></item><item><title>VSCode</title><link>https://lunarwhite.github.io/posts/devtools/vscode/</link><pubDate>Thu, 02 Jan 2020 17:04:16 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/vscode/</guid><description>拥抱开源，visual studio code简直就是开发利器、宇宙第一editor，尤其是众多开源的extension，让vscode始终充满活力。本文记录了不同语言下vscode的基本配置和全局快捷键，希望能最大效度利用好此工具，happy hacking，happy coding
1 全局配置 登录账号同步 删除自带theme 2 添加到右键菜单 Windows Registry Editor Version 5.00 [HKEY_CURRENT_USER\Software\Classes\*\shell\Open with &amp;amp;Code] @=&amp;#34;Open with Code&amp;#34; &amp;#34;Icon&amp;#34;=&amp;#34;C:\\Users\\mewin\\scoop\\apps\\vscode\\current\\Code.</description></item><item><title>Install linux in vmware virtual machine</title><link>https://lunarwhite.github.io/posts/devtools/vm-linux/</link><pubDate>Fri, 29 Nov 2019 16:59:56 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/vm-linux/</guid><description>本文简单介绍了Linux基本的开发环境配置，基于VMware虚拟机，搭配Ubuntu LTS，借助ssh工具和host机联络，比较舒适
1 安装部署 创建 2G/16G/2 关闭3D/USB3.1/虚拟化/移除打印机 xx72/LA/vmlnx/xx 安装VMTool # extract here # open in terminal # root sudo su # install .</description></item><item><title>scoop: command-line package manager for Windows</title><link>https://lunarwhite.github.io/posts/devtools/win-scoop/</link><pubDate>Wed, 20 Nov 2019 16:58:13 +0000</pubDate><guid>https://lunarwhite.github.io/posts/devtools/win-scoop/</guid><description>众所周知，Windows 下进行开发多少有点反人类，环境配置和 macos/linux 相比，简直就是灾难。索性有人开源了一系列包管理工具，scoop/chocolatey/winget，对比之下，选择了 scoop，体验良好，写一文向大家安利。
必要性 如果用过 macOS 或者 Linux 的朋友，或多或少都听说过包管理工具。通过包管理工具，你可以直接在终端中快速自动地安装、配置、卸载和升级软件，而无需通过 GUI 页面一步步手动安装下载软件。这非常适合一次性安装非常多软件，大大地节约了软件安装所需要的时间和步骤，同时也在一定程度上确保了来源软件的安全性
Windows下三大包管理工具，scoop/winget/chocolatey 降低安装维护软件的成本 避免安装大量软件造成的路径污染 不必查找和安装软件的其他依赖项 避免捆绑和垃圾软件 彻底地卸载 环境部署 set-executionpolicy remotesigned -scope currentuser iex (new-object net.</description></item></channel></rss>