<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>metaprogramming on lunarwhite</title><link>https://lunarwhite.github.io/tags/metaprogramming/</link><description>Recent content in metaprogramming on lunarwhite</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© lunarwhite</copyright><lastBuildDate>Tue, 27 Jul 2021 21:01:18 +0000</lastBuildDate><atom:link href="https://lunarwhite.github.io/tags/metaprogramming/index.xml" rel="self" type="application/rss+xml"/><item><title>[MIT-missing] 05 Metaprogramming</title><link>https://lunarwhite.github.io/posts/notes/mitmissing5/</link><pubDate>Tue, 27 Jul 2021 21:01:18 +0000</pubDate><guid>https://lunarwhite.github.io/posts/notes/mitmissing5/</guid><description>Metaprogramming - missing-semester
1 build systems make is one of the most common build systems out there. When you run make, it consults a file called Makefile in the current directory. All the targets, their dependencies, and the rules are defined in that file. Let’s take a look at one: paper.pdf: paper.tex plot-data.png pdflatex paper.tex plot-%.png: %.dat plot.py ./plot.py -i $*.dat -o $@ Each directive in this file is a rule for how to produce the left-hand side using the right-hand side.</description></item></channel></rss>